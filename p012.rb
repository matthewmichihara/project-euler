#!/usr/bin/env ruby

#-------------------------------------------------------------------------------
# The sequence of triangle numbers is generated by adding the natural numbers.
# So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first
# ten terms would be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
#     1: 1
#     3: 1,3
#     6: 1,2,3,6
#    10: 1,2,5,10
#    15: 1,3,5,15
#    21: 1,3,7,21
#    28: 1,2,4,7,14,28
#
# We can see that 28 is the first triangle number to have over five divisors.
#
# What is the value of the first triangle number to have over five hundred
# divisors?
#-------------------------------------------------------------------------------

def get_triangle(n, prev_triangle)
  prev_triangle + n
end

def get_divisors(triangle_number)
  divisor = (Math.sqrt(triangle_number)).floor
  num_divisors = 0
  
  while divisor != 0
    if triangle_number % divisor == 0
      num_divisors += 2
    end
    
    divisor -= 1
  end
  
  if triangle_number % (Math.sqrt(triangle_number)).floor == 0
    num_divisors -= 1
  end
  
  num_divisors
end

triangle_index = 1
n = 1
prev_triangle = 0
done = false

minimum_divisors = 500

while !done
  triangle_number = get_triangle(n, prev_triangle)
  num_divisors = get_divisors(triangle_number)
  
  if num_divisors > minimum_divisors
    done = true
  end
  
  prev_triangle = triangle_number
  n += 1
end

puts triangle_number